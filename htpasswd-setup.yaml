# ==========================================================================================
# Enable HTPasswd authentication and grant admin access in OpenShift
# ==========================================================================================
# This file contains 3 resources:
#  1. A Secret containing htpasswd-formatted user credentials
#  2. An OAuth configuration to tell OpenShift to use HTPasswd for login
#  3. A ClusterRoleBinding to grant cluster-admin permissions to the 'admin' user
#
# This setup lets users log in with a known username/password and gives one of them full
# admin rights, so they can start exploring and managing the OpenShift cluster.
# ==========================================================================================

# ------------------------------------------------------------------------------------------
# 1. Secret: Stores user credentials in htpasswd format
# ------------------------------------------------------------------------------------------
# OpenShift requires credentials to be stored securely.
# This Secret contains a base64-encoded htpasswd file with usernames and bcrypt-hashed passwords.
# This is referenced by the OAuth config to enable login.
# ------------------------------------------------------------------------------------------

apiVersion: v1
kind: Secret
metadata:
  name: htpasswd-secret                 # Name used later in the OAuth configuration
  namespace: openshift-config           # OpenShift looks for identity provider secrets here
type: Opaque                            # Generic key-value secret
data:
  htpasswd: YWRtaW46JDJ5JDEwJHphL0NlNTBGUGNTVFp0S2ZpMkF1OS5obXdIRS4ubU5qTU1oVkdVU01yUWhuMnZsVEREODNXCnRlc3Q6JDJ5JDEwJFRheGxKN2x6YXBmWnlpczZ6ekovay5hY1YxNEEwU0QzaVZIamt2S2JIY2lzOHV1blJ1UEFHCg==
  # Decoded, this is:
  # admin:$2y$10$za/Ce50FPCSTZtKfi2Au9.hmwHE..mNjMMhVGUSMrQhn2vlDTD83W
  # test:$2y$10$TaxlJ7lzapfZyis6zzJ/k.acV14A0SD3iVHjkvKbHcis8uunRuPAG
  #
  # This means the cluster will recognize "admin" and "test" as valid usernames for login.

---

# ------------------------------------------------------------------------------------------
# 2. OAuth Configuration: Tells OpenShift how users should authenticate
# ------------------------------------------------------------------------------------------
# By default, OpenShift only allows kubeadmin to log in.
# This config enables HTPasswd authentication and tells OpenShift where to find the user list.
# Only one OAuth object named 'cluster' is allowed in a cluster.
# ------------------------------------------------------------------------------------------

apiVersion: config.openshift.io/v1
kind: OAuth
metadata:
  name: cluster                         # Must be named "cluster"
spec:
  identityProviders:
  - name: htpasswd_provider             # Arbitrary name for this identity provider
    mappingMethod: claim                # Uses standard claims (e.g. username) for identity mapping
    type: HTPasswd                      # This tells OpenShift to use HTPasswd file format
    htpasswd:
      fileData:
        name: htpasswd-secret           # This refers to the Secret created above

---

# ------------------------------------------------------------------------------------------
# 3. ClusterRoleBinding: Grants the 'admin' user full control of the cluster
# ------------------------------------------------------------------------------------------
# Kubernetes RBAC (Role-Based Access Control) uses roles and bindings to control access.
# A ClusterRoleBinding assigns a ClusterRole (set of permissions) to a subject (like a user).
# Here, we give the 'admin' user the built-in 'cluster-admin' role, which allows full access
# to everything in the cluster â€” ideal for an initial admin or instructor.
# ------------------------------------------------------------------------------------------

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: admin-cluster-admin             # Unique name for this binding
roleRef:
  apiGroup: rbac.authorization.k8s.io  # API group for RBAC
  kind: ClusterRole                     # We're referencing a ClusterRole (cluster-wide role)
  name: cluster-admin                   # This is the most powerful built-in role
subjects:
- kind: User                            # We're assigning this role to a user (not a group/serviceaccount)
  name: admin                           # Must match the username in the htpasswd file
  apiGroup: rbac.authorization.k8s.io  # Required API group for RBAC subjects

